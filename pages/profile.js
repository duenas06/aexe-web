import Head from 'next/head'
import {
  Heading,
  Center,
  Flex,
  Button,
  Stack,
  HStack,
  VStack,
  Text,
  Input,
  Box,
  Image,
  Switch,
  IconButton,
  useColorModeValue,
  useBreakpointValue,
  Container,
  useDisclosure
} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser } from '@chakra-ui/react'
import React, { useEffect, useState, useContext, useRef } from "react";
import { FiMenu } from 'react-icons/fi'
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
import NextLink from 'next/link'
import { TextareaAutosizeProps } from 'react-textarea-autosize';
import { Card, CardHeader, CardBody, CardFooter } from '@chakra-ui/react'
import { Textarea, Divider, Header } from '@chakra-ui/react';
import Router from "next/router";
import { db, storage } from "../firebase";
import { ref, uploadBytes, getDownloadURL, getStorage } from 'firebase/storage';
import { useAuth } from "../firebase";
import { AttachmentIcon } from '@chakra-ui/icons';
import { collection, addDoc, getDocs, doc, onSnapshot, serverTimestamp, query, where } from 'firebase/firestore';
import TopDrawer from '../constanst/components/drawer';
import UserDataContext from '../context/UserDataContext';
import { getDataWithParam, getDatas } from '../constanst/services/generic';



export default function Dashboard() {
  const currentUser = useAuth();
  const isDesktop = useBreakpointValue({ base: false, lg: true })
  const { isOpen, onOpen, onClose } = useDisclosure();
  const btnRef = React.useRef();
  const [user, setUser] = useState();
  const effectRan = useRef(false);
  const userDataContext = useContext(UserDataContext);
  useEffect(() => {
    setTimeout(() => {
      userDataContext.data ?
        setUser(userDataContext.data)
        // : Router.push("/");
        : console.log(user)

    }, []);
  }, []);

  const [Posts, setPost] = useState([]);

  useEffect(() => {
    // if (effectRan.current === false) {
    getPosts();
    // effectRan.current = true;
    // }
  }, []);

  async function getPosts() {
    // onSnapshot(collection(db, "posts"), (snapshot) => {
    //   var posts = []
    //   snapshot.docs.map(doc => {
    //     if (doc.data()?.email == user?.email)
    //       posts.push({ ...doc.data(), id: doc.id })
    //   });
    //   console.log(posts)
    //   setPost(posts)
    // })
    const email = user?.email || "jerikadeguzman@gmail.com"
    const data = []
    const result = await getDataWithParam({ path: "posts", email: email })
    console.log(result)
    setPost(result)
  }

  return (
    <>

      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>

      <Box as="section" h={'100vh'} maxH={'100vh'} bg="#D9D9D9">
        <TopDrawer />


        <Center>
          <Box minH="70vh" borderRadius={'lg'} mt="5vh">
            <VStack
              align="justify"
              mt="3%" ml="5%" mr="5%"
              justifyContent="center"
              spacing="20px">

              <Card
                size="lg"
                align='center'
                variant="outline"
                shadow="base"
                width="60vw"
                bg="#97302F"
                color='white'
                h="33vh"
                outlineColor="gray.900">

                <CardBody>
                  <Center>
                    <Avatar
                      src={user?.profile_url}
                      size="2xl"
                      mt="10%"
                      bg='teal.500' >
                    </Avatar>
                  </Center>

                  <Stack mt='5' spacing='3' textAlign='center'>
                    <Heading fontSize={'1.5vw'} textAlign="center">{user?.first_name} {user?.last_name}</Heading>

                  </Stack>
                </CardBody>

              </Card>


              <HStack align={'start'} width="60vw" justifyContent={'space-between'}>
                <Card
                  size="lg"
                  variant="outline"
                  shadow="below"
                  width="25vw"
                  bg="#97302F"
                  h="30vh"
                  fontWeight={'semibold'}
                  color='white'
                  padding={'1vw'}
                  paddingInline={'3vw'}
                  outlineColor="gray.900">
                  <VStack>
                    <Text fontSize={'1.2vw'} fontWeight={"bold"}>Personal Information</Text>
                  </VStack>
                  <VStack w='20vw' mt={'1vh'}>
                    <Text alignSelf={'flex-start'} fontSize={'1vw'}>{"Age: " + user?.age}</Text>
                    <Text alignSelf={'flex-start'} fontSize={'1vw'}>{"Address: " + user?.address}</Text>
                    <Text alignSelf={'flex-start'} fontSize={'1vw'}>{"Email Address: " + user?.email}</Text>
                  </VStack>
                </Card>

                <Card
                  minH="30vh"
                  variant="outline"
                  width="32vw"
                  padding={'1vw'}
                  paddingInline={'3vw'}
                  bg="#97302F"
                  h="47vh"
                  color={'white'}
                  spacing="5"
                  outlineColor="gray.900">
                  <VStack >
                    <Text alignSelf={'flex-start'} fontSize={'1.3vw'} fontWeight={'bold'}>{user?.first_name + "'s Posts"}</Text>
                    <Divider />
                    <VStack overflowY={'scroll'} minH="30vh" h="20vh" w="30vw">
                      {Posts?.map((item, index) => {
                        return (
                          <>
                            <HStack key={index} color='black' bg={'white'} padding={'1vw'} height={'9vh'} borderRadius={'lg'} width={'25vw'}>
                              <Text fontWeight={'semibold'}>{item.caption}</Text>
                            </HStack>
                          </>
                        )
                      })}
                    </VStack>
                    {/* <HStack color='black' bg={'white'} padding={'1vw'} height={'9vh'} borderRadius={'lg'} mb={'1vh'} width={'25vw'}>
                      <Text fontWeight={'semibold'}>Hakdog</Text>
                    </HStack> */}
                  </VStack>
                </Card>

              </HStack>
            </VStack>




          </Box>
        </Center >

      </Box >



    </>
  )
}
